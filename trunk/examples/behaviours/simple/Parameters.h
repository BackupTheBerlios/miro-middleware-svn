// -*- c++ -*- ///////////////////////////////////////////////////////////////
// This file was auto-generated by makeParameters
//////////////////////////////////////////////////////////////////////////////
#ifndef _Parameters_h_1042108388
#define _Parameters_h_1042108388

#include "miro/Parameters.h"

#include <ace/Time_Value.h>
#include <iostream>
#include <miro/Angle.h>
#include <qdom.h>

// forward declaration
class QDomNode;

class TactileStopParameters : public Miro::EventBehaviourParameters
{
  typedef Miro::EventBehaviourParameters Super;

public: 
  TactileStopParameters();

};

class StraightParameters : public Miro::TimedBehaviourParameters
{
  typedef Miro::TimedBehaviourParameters Super;

public: 
  double rotation;
  long translation;

  StraightParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};

class WanderParameters : public Miro::TimedBehaviourParameters
{
  typedef Miro::TimedBehaviourParameters Super;

public: 
  double maxRotation;
  double minRotation;
  long maxTranslation;
  long minTranslation;
  double thresholdChange;
  double thresholdStraight;

  WanderParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};

class TimerParameters : public Miro::TimedBehaviourParameters
{
  typedef Miro::TimedBehaviourParameters Super;

public: 
  ACE_Time_Value time;

  TimerParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};

#endif // Parameters_h
