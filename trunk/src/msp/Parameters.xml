<!DOCTYPE xml SYSTEM "PolicyEditor_behaviour.dtd">
<config> 
  <config_global name="namespace" value="Msp" />
  <config_global name="include" value="miro/SvcParameters.h" />

  <config_group name="msp">
    <config_item parent="Miro::Dev" instance="true">
      <config_parameter name="device" type="string" inherited="true" default="/dev/abus" />
      <config_parameter name="sonarDescription" type="Miro::ScanDescriptionIDL" />
      <constructor>
        sonarDescription.scanType = Miro::RangeSensor::BUNCHWISE;
        sonarDescription.eventName = &quot;Sonar&quot;;
        sonarDescription.group.length(1);
        sonarDescription.group[0].description.minRange = 50;
        sonarDescription.group[0].description.maxRange = 5000;
        sonarDescription.group[0].description.focus = Miro::deg2Rad(30);
        sonarDescription.group[0].sensor.length(24);
        for (unsigned int i = 0; i &lt; 24; ++i) {
          sonarDescription.group[0].sensor[i].height = 740;
          sonarDescription.group[0].sensor[i].distance = 248;
          sonarDescription.group[0].sensor[i].alpha = -Miro::deg2Rad(-172.5 + i * 15);
          sonarDescription.group[0].sensor[i].beta = 0;
          sonarDescription.group[0].sensor[i].gamma = 0;
        }
      </constructor>
      <config_parameter name="infraredDescription" type="Miro::ScanDescriptionIDL" />
      <constructor>
        static int infraredHeight[4] = {400, 120, 120};

        infraredDescription.scanType = Miro::RangeSensor::BUNCHWISE;
        infraredDescription.eventName = &quot;Infrared&quot;;
        infraredDescription.group.length(3);
        for (unsigned int j = 0; j &lt; 3; ++j) {
          unsigned int sensors = (j &lt; 2)? 24 : 8;
          double angle = 360. / (double) sensors;
          infraredDescription.group[j].description.minRange = 0;
          infraredDescription.group[j].description.maxRange = 200;
          infraredDescription.group[j].description.focus = Miro::deg2Rad(30);
          infraredDescription.group[j].sensor.length(sensors);
          for (unsigned int i = 0; i &lt; sensors; ++i) {
            infraredDescription.group[j].sensor[i].height = infraredHeight[j];
            infraredDescription.group[j].sensor[i].distance = (j &lt; 1)? 248 : 267;
            infraredDescription.group[j].sensor[i].alpha = Miro::deg2Rad(180 - (angle / 2.) - i * angle);
            infraredDescription.group[j].sensor[i].beta = 0;
            infraredDescription.group[j].sensor[i].gamma = (j &lt; 2)? 0. : -60.;
          }
        }
      </constructor>
      <config_parameter name="tactileDescription" type="Miro::ScanDescriptionIDL" />
      <constructor>
        static int tactileHeight[4] = {950, 450, 300, 50};

        tactileDescription.scanType = Miro::RangeSensor::BUNCHWISE;
        tactileDescription.eventName = &quot;Tactile&quot;;
        tactileDescription.group.length(4);
        for (unsigned int j = 0; j &lt; 4; ++j) {
          unsigned int sensors = (j &lt; 2)? 12 : 16;
          double angle = 360. / (double) sensors;

          tactileDescription.group[j].description.minRange = 0;
          tactileDescription.group[j].description.maxRange = 10;
          tactileDescription.group[j].description.focus = - Miro::deg2Rad(angle / 2.);
          tactileDescription.group[j].sensor.length(sensors);
          for (unsigned int i = 0; i &lt; sensors; ++i) {
            tactileDescription.group[j].sensor[i].height = tactileHeight[j];
            tactileDescription.group[j].sensor[i].distance = (j &lt; 2)? 248 : 267;
            tactileDescription.group[j].sensor[i].alpha = Miro::deg2Rad(180. - (angle / 2.) -  i * angle);
            tactileDescription.group[j].sensor[i].beta = 0;
            tactileDescription.group[j].sensor[i].gamma = 0;
          }
        }
      </constructor>
    </config_item>
  </config_group>
</config>
