// -*- c++ -*- ///////////////////////////////////////////////////////////////
// This file was auto-generated by MakeParameters
//////////////////////////////////////////////////////////////////////////////
#include "Parameters.h"

#include <miro/IO.h>
#include <miro/XmlParse.h>
#include <qdom.h>

namespace
{
  using Miro::operator<<=;
  using Miro::operator>>=;
  using Miro::operator<<;
};

namespace FaulTty
{
  Parameters::Parameters() :
    angleConvFactor(0.001534),
    diffConvFactor(0.006000),
    distConvFactor(0.485000),
    rangeConvFactor(1.000000),
    vel2Divisor(20.000000),
    velConvFactor(1.000000)
  {
    ttyParams.baudrate = 19200;
      
  }

  void
  Parameters::operator <<= (const QDomNode& _node)
  {
    this->Super::operator <<= (_node);

    if (!_node.isNull()) {
      QDomNode n = _node.firstChild();
      while(!n.isNull() ) {
        QDomElement e = n.toElement();
        if( !e.isNull() ) {
          QDomAttr a = e.attributeNode("name");
          if (!a.isNull()) {
            QString i = a.value();
            if (i == "AngleConvFactor") {
              this->angleConvFactor <<= n;
            }
            else if (i == "DiffConvFactor") {
              this->diffConvFactor <<= n;
            }
            else if (i == "DistConvFactor") {
              this->distConvFactor <<= n;
            }
            else if (i == "RangeConvFactor") {
              this->rangeConvFactor <<= n;
            }
            else if (i == "Vel2Divisor") {
              this->vel2Divisor <<= n;
            }
            else if (i == "VelConvFactor") {
              this->velConvFactor <<= n;
            }
          }
        }
        n = n.nextSibling();
      }
    }
  }
  QDomElement
  Parameters::operator >>= (QDomNode& _node) const
  {
    QDomElement e = Super::operator >>= (_node);
    QDomElement g;

    g = (this->angleConvFactor >>= e);
    g.setAttribute("name", "AngleConvFactor");
    g = (this->diffConvFactor >>= e);
    g.setAttribute("name", "DiffConvFactor");
    g = (this->distConvFactor >>= e);
    g.setAttribute("name", "DistConvFactor");
    g = (this->rangeConvFactor >>= e);
    g.setAttribute("name", "RangeConvFactor");
    g = (this->vel2Divisor >>= e);
    g.setAttribute("name", "Vel2Divisor");
    g = (this->velConvFactor >>= e);
    g.setAttribute("name", "VelConvFactor");

    return e;
  }

  void
  Parameters::printToStream(std::ostream& ostr) const
  {
    Super::printToStream(ostr);

    ostr << "AngleConvFactor: " << angleConvFactor << std::endl
         << "DiffConvFactor: " << diffConvFactor << std::endl
         << "DistConvFactor: " << distConvFactor << std::endl
         << "RangeConvFactor: " << rangeConvFactor << std::endl
         << "Vel2Divisor: " << vel2Divisor << std::endl
         << "VelConvFactor: " << velConvFactor << std::endl;
  }
};
