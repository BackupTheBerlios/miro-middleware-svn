// -*- c++ -*- ///////////////////////////////////////////////////////////////
// This file was auto-generated by MakeParameters
//////////////////////////////////////////////////////////////////////////////
#ifndef Parameters_h_407117
#define Parameters_h_407117

#include "botsvcs/BAP/Parameters.h"

#include <ace/Time_Value.h>
#include <iostream>
#include <miro/Angle.h>
#include <qdom.h>

class TactileStopParameters : public Miro::BAP::EventBehaviourParameters
{
  typedef Miro::BAP::EventBehaviourParameters Super;

public: 
  TactileStopParameters();

};

class StraightParameters : public Miro::BAP::TimedBehaviourParameters
{
  typedef Miro::BAP::TimedBehaviourParameters Super;

public: 
  long translation;
  double rotation;

  StraightParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};

class WanderParameters : public Miro::BAP::TimedBehaviourParameters
{
  typedef Miro::BAP::TimedBehaviourParameters Super;

public: 
  double thresholdChange;
  double thresholdStraight;
  long minTranslation;
  long maxTranslation;
  double minRotation;
  double maxRotation;

  WanderParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};

class TimerParameters : public Miro::BAP::TimedBehaviourParameters
{
  typedef Miro::BAP::TimedBehaviourParameters Super;

public: 
  ACE_Time_Value time;

  TimerParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};

class MoveToPointParameters : public Miro::BAP::EventBehaviourParameters
{
  typedef Miro::BAP::EventBehaviourParameters Super;

public: 
  long fastTranslation;
  long slowTranslation;
  double maxRotation;
  double targetX;
  double targetY;
  bool correctOrientation;
  Miro::Angle angle;
  double radius;
  Miro::Angle delta;

  MoveToPointParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};

#endif // Parameters_h
