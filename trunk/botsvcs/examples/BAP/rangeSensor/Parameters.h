// -*- c++ -*- ///////////////////////////////////////////////////////////////
// This file was auto-generated by MakeParameters
//////////////////////////////////////////////////////////////////////////////
#ifndef Parameters_h_648384
#define Parameters_h_648384

#include "botsvcs/BAP/Parameters.h"

#include <ace/Time_Value.h>
#include <iostream>
#include <miro/Angle.h>
#include <qdom.h>
#include <string>

class RangeSensorBehaviourParameters : public Miro::BAP::EventBehaviourParameters
{
  typedef Miro::BAP::EventBehaviourParameters Super;

public: 
  std::string sensorName;
  ACE_Time_Value history;

  RangeSensorBehaviourParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};

class RangeSensorWallFollowParameters : public RangeSensorBehaviourParameters
{
  typedef RangeSensorBehaviourParameters Super;

public: 
  long translation;
  double rotation;
  int minDistance;
  int maxDistance;

  RangeSensorWallFollowParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};

class RangeSensorAvoidParameters : public RangeSensorBehaviourParameters
{
  typedef RangeSensorBehaviourParameters Super;

public: 
  int minDistance;
  int haltDistance;
  int lateralDistance;
  long translation;
  double rotation;
  std::string sensorName;

  RangeSensorAvoidParameters();

  virtual void operator <<= (const QDomNode&);
  virtual QDomElement operator >>= (QDomNode&) const;
protected:
  virtual void printToStream(std::ostream&) const;
};



#endif // Parameters_h
