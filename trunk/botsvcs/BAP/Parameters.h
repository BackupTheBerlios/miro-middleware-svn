// -*- c++ -*- ///////////////////////////////////////////////////////////////
// This file was auto-generated by MakeParameters
//////////////////////////////////////////////////////////////////////////////
#ifndef Parameters_h_457247
#define Parameters_h_457247

#include "botsvcs/BAP/ArbiterParameters.h"
#include "botsvcs/BAP/BehaviourParameters.h"
#include "botsvcs/BAP/Transition.h"

#include <ace/Time_Value.h>
#include <iostream>
#include <qdom.h>

namespace Miro
{
  namespace BAP
  {

    class EventBehaviourParameters : public BehaviourParameters
    {
      typedef BehaviourParameters Super;

    public: 
      EventBehaviourParameters();

    };

    class TimedBehaviourParameters : public BehaviourParameters
    {
      typedef BehaviourParameters Super;

    public: 
      ACE_Time_Value pace;

      TimedBehaviourParameters();

      virtual void operator <<= (const QDomNode&);
      virtual QDomElement operator >>= (QDomNode&) const;
    protected:
      virtual void printToStream(std::ostream&) const;
    };

    class TaskBehaviourParameters : public BehaviourParameters
    {
      typedef BehaviourParameters Super;

    public: 
      TaskBehaviourParameters();

    };


    class PriorityArbiterParameters : public ArbiterParameters
    {
      typedef ArbiterParameters Super;

    public: 
      PriorityArbiterParameters();

    };

    class MotionArbiterParameters : public PriorityArbiterParameters
    {
      typedef PriorityArbiterParameters Super;

    public: 
      MotionArbiterParameters();

    };

    class PowerArbiterParameters : public PriorityArbiterParameters
    {
      typedef PriorityArbiterParameters Super;

    public: 
      PowerArbiterParameters();

    };

  }
}

#endif // Parameters_h
