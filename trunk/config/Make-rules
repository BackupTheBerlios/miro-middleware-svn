## -*- Makefile -*- ##########################################################
##
## This file is part of Miro (The Middleware For Robots)
##
## (c) 2003
## Department of Neural Information Processing, University of Ulm, Germany
##
## $Id$
##
## Miro/config/Make-rules
##
##############################################################################

# includes 

AM_CXXFLAGS = -I$(top_srcdir)/src -I$(top_srcdir)/ -I$(top_builddir)/src -I$(top_builddir)/
AM_CXXFLAGS += $(ACE_CFLAGS) $(TAO_CFLAGS) $(QT_CFLAGS)
AM_CXXFLAGS += $(INHERITED_CPPFLAGS) $(INHERITED_SYMBOLS)
AM_CXXFLAGS += -W -Wall -Woverloaded-virtual -DDEBUG -DQT_GENUINE_STR

AM_CPPFLAGS =

# lib search path

AM_LDFLAGS = -L$(top_builddir)/lib
AM_LDFLAGS += $(ACE_LDFLAGS) $(TAO_LDFLAGS) $(QT_LDFLAGS)
AM_LDFLAGS += $(INHERITED_LDFLAGS) -version-info `echo $(VERSION) | sed 's/\./:/g'`

# header include dirs

idl_includedir         = $(includedir)/idl
params_includedir      = $(includedir)/params
abus_includedir        = $(includedir)/abus
b21Base_includedir     = $(includedir)/b21Base
base_includedir        = $(includedir)/base
buttons_includedir     = $(includedir)/buttons
can_includedir         = $(includedir)/can
faulMotor_includedir   = $(includedir)/faulMotor
faulTty_includedir     = $(includedir)/faulTty
laser_includedir       = $(includedir)/laser
mcp_includedir         = $(includedir)/mcp
miro_includedir        = $(includedir)/miro
msp_includedir         = $(includedir)/msp
panTilt_includedir     = $(includedir)/panTilt
pioneer_includedir     = $(includedir)/pioneer
pioneerBase_includedir = $(includedir)/pioneerBase
psos_includedir        = $(includedir)/psos
sparrow_includedir     = $(includedir)/sparrow
sparrowBase_includedir = $(includedir)/sparrowBase
speech_includedir      = $(includedir)/speech
sphinx_includedir      = $(includedir)/sphinx
video_includedir       = $(includedir)/video

# common build rules

.xml.cpp:
	$(top_builddir)/src/makeParams/MakeParams -f $< -n $(@:.cpp=) -s cpp -h h

# these rules do the trick of local install/cleaning the libraries and programs

INSTALLLTLIBRARIES=for i in $(lib_LTLIBRARIES); do if test $$i -nt $(PWD)/$(top_builddir)/lib/$$i || ! test -e $(PWD)/$(top_builddir)/lib/$$i; then /bin/sh $(top_builddir)/libtool --mode=install /usr/bin/install $$i $(PWD)/$(top_builddir)/lib/$$i; fi; done

INSTALLLIBRARIES=for i in $(lib_LIBRARIES); do if test $$i -nt $(PWD)/$(top_builddir)/lib/$$i || ! test -e $(PWD)/$(top_builddir)/lib/$$i; then /bin/sh $(top_builddir)/libtool --mode=install /usr/bin/install $$i $(PWD)/$(top_builddir)/lib/$$i; fi; done

INSTALLPROGRAMS=for i in $(bin_PROGRAMS); do if test $$i -nt $(PWD)/$(top_builddir)/bin/$$i || ! test -e $(PWD)/$(top_builddir)/bin/$$i; then /bin/sh $(top_builddir)/libtool --mode=install /usr/bin/install $$i $(PWD)/$(top_builddir)/bin/$$i; fi; done


CLEANLTLIBRARIES=for i in $(lib_LTLIBRARIES); do if test -f $(top_builddir)/lib/$$i; then rm -f $(top_builddir)/lib/`basename $$i .la`.*; fi; done

CLEANLIBRARIES=for i in $(lib_LIBRARIES); do if test -f $(top_builddir)/lib/$$i; then rm -f $(top_builddir)/lib/$$i; fi; done

CLEANPROGRAMS=for i in $(bin_PROGRAMS); do if test -f $(top_builddir)/bin/$$i; then rm -f $(top_builddir)/bin/$$i; fi; done

