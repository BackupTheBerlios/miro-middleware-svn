// -*- idl -*- ///////////////////////////////////////////////////////////////
//
// This file is part of Miro (The Middleware for Robots)
// Copyright (C) 1999-2005
// Department of Neuroinformatics, University of Ulm, Germany
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published
// by the Free Software Foundation; either version 2, or (at your option)
// any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//
// $Id$
//
#ifndef ScanDescription_idl
#define ScanDescription_idl

module Miro
{
  //! Struct describing the properties of a range sensor device.
  struct SensorDescriptionIDL
  {
    //! The minimal measurable distance (mm).
    long minRange;
    //! The maximal measurable distance (mm).
    long maxRange;
    //! The focus of the sensor (rad).
    double focus;
  };

  //! Struct representing the position of an individual sensor.
  struct SensorPositionIDL
  {
    //! Sensor height above ground (mm).
    long height;
    //! Sensor distance from central axis (mm).
    long distance;
    //! angle relative to robot heading (rad).
    double alpha;
    //! angle relative to the distance vector (rad).
    double beta;
    //! angle realtive to the horizon (rad).
    double gamma;
    //! Is the sensor currently masked out?
    /**
     * That is, the sensor will always report INVALID_RANGE.
     * This was introduced to handle temporarily broken sensors.
     */
    boolean masked;
  };

  //! Struct holding the data of a single sensor group.
  struct SensorGroupIDL
  {
    //! The general properties of the group of sensors.
    SensorDescriptionIDL        description;
    //! The individual positions of the sensors.
    sequence<SensorPositionIDL> sensor;
  };

  //! Description of a range sensor scan.
  /**
   * Range sensors scans like sonar, laser, infrared and (well)
   * tactile scans are described with this data structure in a uniform
   * manner.
   */
  struct ScanDescriptionIDL
  {
    //! Which kind of events are produced by the sensory device.
    long scanType;
    //! The name under which these events are published.
    string eventName;
    //! The descriptions of each sensor group.
    sequence<SensorGroupIDL> group;
  };
};
#endif // ScanDescription_idl
