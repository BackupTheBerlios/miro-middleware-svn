// -*- idl -*- ///////////////////////////////////////////////////////////////
//
// This file is part of Miro (The Middleware for Robots)
// Copyright (C) 1999-2005
// Department of Neuroinformatics, University of Ulm, Germany
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published
// by the Free Software Foundation; either version 2, or (at your option)
// any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//
// $Id$
//
#ifndef ObjectVector_idl
#define ObjectVector_idl

#include "Exception.idl"
#include "Time.idl"

module Miro
{
  //! Interface for Object komunikation.

  enum ObjectType {
    FIRST,
    SECOND
  };

   //! A vector Objects
  typedef sequence<short> ObjectIDL;
  typedef sequence<short> MovesIDL;


  struct mirrorObject
  {
    //! The time the scan was accquired.
    TimeIDL time;
    ObjectIDL data;
  };

  struct mirrorMoves
  {
    //! The time the scan was accquired.
    TimeIDL time;
    MovesIDL data;
  };



  interface ObjectVector
  {
    mirrorObject getObjectVector(in ObjectType _objectType);
    //mirrorMoves getAktion();
    void setObjectVector(in mirrorObject ObstArt, in ObjectType _objectType);
  };
};
#endif // Object_Vector_idl
