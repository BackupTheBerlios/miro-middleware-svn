// -*- idl -*- ///////////////////////////////////////////////////////////////
//
// This file is part of Miro (The Middleware for Robots)
// Copyright (C) 2005
// Department of Software Technology, Technical University of Graz, Austria
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published
// by the Free Software Foundation; either version 2, or (at your option)
// any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//
// $Id$
//
#ifndef InertialSensor_idl
#define InertialSensor_idl

#include "Exception.idl"
#include "Compass.idl"
#include "Inclinometer.idl"
#include "InertialSensorEvent.idl"
#include "CompassEvent.idl"
#include "InclinometerEvent.idl"

module Miro
{
  /// InertialSensor Interface
  /**
   * It provides a uniform way to query the layout of intertial
   * sensors and query their data. This is especially usefull in
   * conjunction with the notification service. All inertial sensors
   * broadcast their data periodically via the event channel (named
   * "EventChannel" at the naming service) in a unified data format
   */
  interface InertialSensor : Compass, Inclinometer
  {
  
    //! Read the current inertial data (pitch, roll and yaw) angles
    InertialSensorEventIDL getInertialData();
    //! Wait up to one second for an inertial update and read it
    InertialSensorEventIDL getWaitInertialData() raises(ETimeOut);
  };
};

#endif // InertialSensor_idl
