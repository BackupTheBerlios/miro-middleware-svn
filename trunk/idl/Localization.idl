// -*- c++ -*- ///////////////////////////////////////////////////////////////
//
// This file is part of Nix (Nix Is eXtreme)
//
// (c) 2001, 2002, 2003
// Department of Neural Information Processing, University of Ulm, Germany
// 
// $Id$
// 
//////////////////////////////////////////////////////////////////////////////
#ifndef MCL_Localization_idl
#define MCL_Localization_idl

#include <idl/Time.idl>
#include <idl/Position.idl>

module Miro
{
  module MCL
  {
    struct LocalizeStatisticsIDL
    {
      // sample set statistics
      
      unsigned long maxSampleSetSize;
      
      unsigned long oldSampleSet;
      unsigned long newSampleSet;
      unsigned long competitiveSamples;
      unsigned long newSamples;
      
      // sample wheight statistics
      
      double min;
      double max;
      double mean;
      double variance;
      
      unsigned long histogram[10];
      
      unsigned long hypoSamples;
      double hypoVariance;
      
      // performance statistics
      
      Miro::TimeIDL preprocessTime;
      Miro::TimeIDL updateTime;
      Miro::TimeIDL selectTime;
      Miro::TimeIDL hypothesisTime;
      Miro::TimeIDL totalTime;
      
      // arbitrary message to the world
      
      string result;
    };
    
    typedef sequence<string> FeatureVector;
    
    exception EUnknown {};
    
    interface Localization
    {
      void initRestart();
      void initUniform();
      
      void resampling(in boolean flag);
    };

    interface MultiFeatureLocalization : Localization
    {
      void addFeature(in string feature) raises (EUnknown);
      void delFeature(in string feature) raises (EUnknown);
      //! The features currently used by the feature manager.
      /**
       * Feature detectors for which there is no data available
       * will be internally skipped, but still be present in this
       * list.
       */
      FeatureVector currentFeatures();
      //! The features availalble to the feature manager.
      FeatureVector availableFeatures();
    };
  };
};
#endif
