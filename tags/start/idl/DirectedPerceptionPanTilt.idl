// -*- idl -*- ///////////////////////////////////////////////////////////////
//
// This file is part of Miro (The Middleware For Robots)
//
// for details copyright, usage and credits to other groups see Miro/COPYRIGHT
// for documentation see Miro/doc
// 
// (c) 1999,2000
// Department of Neural Information Processing, University of Ulm, Germany
//
// Authors: 
//    Stefan Enderle, 
//    Stefan Sablatnoeg, 
//    Hans Utz
// 
// $Id$
// 
//////////////////////////////////////////////////////////////////////////////
#ifndef DirectedPerceptionPanTilt_idl
#define DirectedPerceptionPanTilt_idl

#include "PanTilt.idl"

module Miro
{
  /** struct representing a pantilt speed and acceleration configuration */
  struct PanTiltSpdAccIDL
  {
    /** target pan speed value in rad/s */
    double     targetpanspeed;
    /** target tilt speed value in rad/s */
    double     targettiltspeed;
    /** base pan speed value in rad/s */
    double     panbasespeed;
    /** minimum pan speed value in rad/s */
    double     panminspeed;
    /** maximum pan speed value in rad/s */
    double     panmaxspeed;
    /** base tilt speed value in rad/s */
    double     tiltbasespeed;
    /** minimum tilt speed value in rad/s */
    double     tiltminspeed;
    /** maximum tilt speed value in rad/s */
    double     tiltmaxspeed;
    /** pan acc value in rad/s^2 */
    double     panacc;
    /** tilt acc value in rad/s^2 */
    double     tiltacc;
  };

  /** struct representing a pantilt limits  configuration */
  struct PanTiltLimitsIDL
  {
    /** minimal pan position */
    double minpanposition;
    /** maximal pan position */
    double maxpanposition;
    /** minimal tilt position */
    double mintiltposition;
    /** maximal tilt position */
    double maxtiltposition;
  };

  /** struct representing a pantilt hold and move power configuration */
  struct PanTiltPowersIDL 
  {
    /** hold power pan 0,1,2 off, low, regular */
    long panhold;

    /** hold power tilt 0,1,2 off, low, regular */
    long tilthold;

    /** move power pan 0,1,2 low regular high */
    long panmove;

    /** move power tilt 0,1,2, low regular high */
    long tiltmove;

  };

  /**
   * Interface to the panTilt unit of the B21 robot, manufactured by
   * Directed Perception. It registers as "PanTilt" at the naming service
   * in the specified naming context.
   */
  interface DirectedPerceptionPanTilt : PanTilt
  {
    /** Move the PanTiltUnit to dest, if awaitCompletion is true, the
     * call returns after the position is reached, else the call
     * returns immediatly */
    void setWaitPosition( in Miro::PanTiltPositionIDL dest) 
      raises(Miro::EOutOfBounds, Miro::EDevIO);

    /**
     * sets the actual speed and acceleration settings
     */
    void setSpdAcc( in PanTiltSpdAccIDL dest )
      raises(Miro::EDevIO, Miro::ETimeOut);

    /**
     * returns the actual speed and acceleration settings of the pantilt 
     */
    PanTiltSpdAccIDL  getSpdAcc() raises(Miro::EDevIO, Miro::ETimeOut);

    /**
     * returns the actual limits settings of the pantilt 
     */
    PanTiltLimitsIDL  getLimits() raises(Miro::EDevIO, Miro::ETimeOut);

    /**
     * sets the actual powers settings
     */
    void setPowers( in PanTiltPowersIDL dest ) 
      raises(Miro::EDevIO, Miro::ETimeOut);

    /**
     * returns the actual powers settings of the pantilt 
     */
    PanTiltPowersIDL  getPowers() 
      raises(Miro::EDevIO, Miro::ETimeOut);
  };
};

#endif
