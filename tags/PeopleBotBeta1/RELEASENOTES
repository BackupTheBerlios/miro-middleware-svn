We are pleased to announce our first public beta of Miro.

It is the PeopleBot beta 1. The tag in the cvs repository is
PeopleBotBeta1. You can update to it by a simple:

cvs update -r PeopleBotBeta1

Tar archives are also available at our web site.

This beta introduces support for the performance people bot platform
by active media. The things that should work are:

The Ppb-Services are all collected within the PioneerBase binary. - We
are pretty sure we temporarily broke the Pioneer1 support on the
way. But it's hard to check, as our Pioneer1 isn't functional
anymore. We will work on the configurability, to make them all work
together nicely.

-Motion / DifferentialMotion
  as can be tested for instance by the MotionTest and
  DifferentialMotionTest. 

  Known issues:
  The method limp() does currently not disable the motors, due
  to bad interaction with the behaviour engine.
  
- Odometry
  as can be tested for instance by the OdometryTest

  Known issues:
  The reported velocity wrong.

- RangeSensor interfaces for Sonar and Tactile sensors
  Try RangSensorTest or QtRangeSenor.

  Known issues:
  QtRangeSensor does only display pressed tactiles (bumpers)
  by now.

- VideoService

  Knows issues:
  - After each reboot, please execute the following command on the
  commandline: "v4lctl setnorm NTSC".
  - If the video radio link is switched on, the internal image may be
  very dark. This is not a Miro bug, but a technical peoplebot
  limitation.


- BehaviourEngine

  The simple avoid behaviour demo is working quite well. It drives the
  robot straight and turns away from obstacles.

  The wallfollow behaviour demo does not really work - do not test it!

  To test the avoid demo:
  * Start the 
    PioneerBase
  * Start the Behaviours, specifying the policy at the command line:
    Behaviours ../examples/behaviours/PpbStraight.xml
  * Start the PolicyController, to start and stop the policy.
  The PioneerBase has to run on the robot. It is also a good idea to
  run the Behaviours on the robot, to avoid that network latencies
  stop the control loop.
  The PolicyController is a GUI-Interface that can be run anywhere.

  WARNING: This demo drives the robot around. It uses only Sonar
  for obstacle avoidance. So make sure your obstacles are visible
  by the sonar rings. We take absolutely NO WARRANTY for the 
  correctness of this behaviour demo. It can damage your robot
  by driving it against an obstacles or down the next staircase.
  You have been warned!

  Monitoring tools for the behaviour engine are currently only
  available in our Robot Soccer software project. We are about to
  separate them for inclusion into Miro. Sorry for the inconvenience.

- PanTilt (experimental)
  as can be tested for instance by the PanTiltTest

  Known Issues:
  Afer using, the remote control may be disfunctional. Simple switch
  the camera off and on one time by removing the power cable.

- Gripper (experimental)
  as can be tested for instance by the GripperTest

  Know Issues:
  For a list of implemented gripper commands, please see the
  appropriate idl-file.

One last note: The command line option -MiroRebindIOR is enabled by
default for now.
