// -*- idl -*- ///////////////////////////////////////////////////////////////
//
// This file is part of Miro (The Middleware for Robots)
// Copyright (C) 1999-2005
// Department of Neuroinformatics, University of Ulm, Germany
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published
// by the Free Software Foundation; either version 2, or (at your option)
// any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//
// $Id$
//
#ifndef Kicker_idl
#define Kicker_idl

#include "Time.idl"
#include "Exception.idl"

module Miro
{
  //! Interface for a simple kicking device as used in the RoboCup scenario.
  /** 
   * @author Hans Utz
   */
  interface Kicker
  {
    //! The kick.
    /**
     * The kicking device is kicked once and stays that way for the
     * specified amount of time.
     *
     * @param time The time to kick.
     * @throw EOutOfBounds is thrown, if the kicking time is higher
     * than the maximum allowed kicking time.
     * @throw EDevIO is thrown to indicate low level device
     * problems.
     */
    void kick(in TimeIDL time) raises(EOutOfBounds, EDevIO);
  };
};
#endif // Kicker_idl
